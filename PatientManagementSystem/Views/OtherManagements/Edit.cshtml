@model PatientManagementSystem.Models.OtherManagement

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
@Html.Hidden("UnsavedChanges", "0");


@{
    ViewBag.Title = "Edit Other Management Record";
}

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>

@{ int? paid = Model.PatientId; }
<h2>Edit Other Management Record</h2>

@using (Html.BeginForm(null, null, FormMethod.Post, new { name = "frm", id = "frm" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.OtherId)
        @Html.HiddenFor(model => model.PatientId, new { htmlAttributes = new { @class = "form-control" } })
        

        <div class="form-group">
            @Html.LabelFor(model => model.Patient.FullName, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.DisplayFor(model => model.Patient.FullName, new { htmlAttributes = new { @class = "form-control" } })               
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Patient.BirthDate, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">                
                @Html.DisplayFor(model => model.Patient.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VisitDate, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.VisitDate, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.VisitDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TCell, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TCell, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.TCell, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ViralLoad, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ViralLoad, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.ViralLoad, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WhiteBloodCell, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WhiteBloodCell, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.WhiteBloodCell, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hemoglobin, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Hemoglobin, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Hemoglobin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlasmaIronTurnover, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlasmaIronTurnover, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.PlasmaIronTurnover, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherWeight, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherWeight, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.OtherWeight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Triglycerides, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Triglycerides, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Triglycerides, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalCholesterol, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalCholesterol, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.TotalCholesterol, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OtherDocuments, htmlAttributes: new { @class = "control-Documentsel col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OtherDocuments, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.OtherDocuments, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" onclick="HandleSaveEvent()" />
            </div>
        </div>
    </div>
}
@Html.ActionLink("Go back to other management list", "OtherIndex", "OtherManagements", new { id = paid }, null)

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {

        })
        function HandleFieldChange() {
            $("#UnsavedChanges").val("1");
        }

        function HandleSaveEvent() {
            $("#UnsavedChanges").val("0");
        }

        window.onbeforeunload = function () {
            if ($("#UnsavedChanges").val() == "1") {
                var _message = "You currently have unsaved changes!!!\n\nAre you sure you want to exit without saving.\n\nChoose ‘Leave this page’ to exit without saving changes.\nChoose ‘Stay on this page’ to return to the billing profile.";
                return _message;
            }
        }
    </script>
}
