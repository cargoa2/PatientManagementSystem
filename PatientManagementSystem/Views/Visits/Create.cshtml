@model PatientManagementSystem.Models.Visits

<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
@Html.Hidden("UnsavedChanges", "0");


@{
    ViewBag.Title = "Create";
}
@{ int? paid = Model.PatientId; }

<h4>KENTUCKIANA INFECTIOUS DISEASE CONSULTANCTS, PSC</h4>
<h5>Barbara Wojda, M.D</h5>
<h5>125 Fairfax Avenue, Louisville, KY 40207</h5>
<h5>Phone (502) 895-6155 Fax (502) 895-6156</h5>
<h5>drbarbarawojda.com</h5>

<br />

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">        
       
        <script src="~/Scripts/jquery-1.10.2.js"></script>
        <script src="~/Scripts/jquery-1.10.2.min.js"></script>        
        
        <h2 id="office">Create Office Consulation</h2>
        <h2 id="follow">Create Follow Up</h2>

        <h4>Add New Visit</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PatientId, new { htmlAttributes = new { @class = "form-control" } })                              
        
        <div class="form-group">
            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10 form-control-static">
                @Html.DisplayFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })                
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10 form-control-static">               
                @Html.DisplayFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })               
            </div>
        </div>
        
        <div class="form-group">
            @Html.LabelFor(model => model.Initial, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBoxFor(model => model.Initial, new { @id = "initial", @onclick = "mycheck.call(this)"})                   
                    @Html.ValidationMessageFor(model => model.Initial, "", new { @class = "text-danger"})
                    
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VisitType, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.VisitType, htmlAttributes: new { @class = "form-control", onchange = "HandleFieldChange()" })
                @Html.ValidationMessageFor(model => model.VisitType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VisitDate, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">              
                @Html.EditorFor(model => model.VisitDate, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.VisitDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DiagnosisCode, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DiagnosisCode, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.DiagnosisCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CoPay, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CoPay, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.CoPay, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(model => model.PaymentType, htmlAttributes: new { @class = "form-control", onchange = "HandleFieldChange()" })
                @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CheckNumber, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CheckNumber, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.CheckNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalPaid, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalPaid, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.TotalPaid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="problem" class="form-group">
            @Html.LabelFor(model => model.ProblemList, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProblemList, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.ProblemList, "", new { @class = "text-danger" })
            </div>
        </div>       

        <div class="form-group">
            @Html.LabelFor(model => model.MedicalAllergy, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MedicalAllergy, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })                
                @Html.ValidationMessageFor(model => model.MedicalAllergy, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="ref" class="form-group">
            @Html.LabelFor(model => model.ReferralReason, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">                
                @Html.EditorFor(model => model.ReferralReason, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.ReferralReason, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.History, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.History, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.History, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PastHistory, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PastHistory, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.PastHistory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="epi" class="form-group">
            @Html.LabelFor(model => model.Epidemiology, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Epidemiology, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Epidemiology, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FamilyHistory, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FamilyHistory, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.FamilyHistory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SocialHistory, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SocialHistory, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.SocialHistory, "", new { @class = "text-danger" })
            </div>
        </div>
        <h3>
            Review of Symptoms
        </h3>

        <div class="form-group">
            @Html.LabelFor(model => model.RosGeneral, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RosGeneral, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.RosGeneral, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RosHeent, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RosHeent, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.RosHeent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Respiratory, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Respiratory, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Respiratory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cardiovascular, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cardiovascular, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Cardiovascular, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gastrointestinal, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Gastrointestinal, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Gastrointestinal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Genitourniary, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Genitourniary, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Genitourniary, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RosNeurological, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RosNeurological, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.RosNeurological, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.psychosocial, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.psychosocial, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.psychosocial, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Medications, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Medications, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Medications, "", new { @class = "text-danger" })
            </div>
        </div>
        <h3>Physical Exam</h3>
        <div class="form-group">
            @Html.LabelFor(model => model.PeGeneral, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PeGeneral, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.PeGeneral, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BloodPressure, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BloodPressure, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.BloodPressure, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HeartRate, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.HeartRate, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.HeartRate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Tempurature, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tempurature, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Tempurature, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeHeent, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PeHeent, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.PeHeent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Neck, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Neck, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Neck, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Skin, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Skin, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Skin, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Lungs, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Lungs, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Lungs, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Heart, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Heart, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Heart, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Abdomen, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Abdomen, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Abdomen, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Musculoskeletal, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Musculoskeletal, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Musculoskeletal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PeNeurological, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PeNeurological, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.PeNeurological, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Additional, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Additional, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Additional, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Documentsoratory, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Documentsoratory, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Documentsoratory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Assessment, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Assessment, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Assessment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plan, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Plan, new { htmlAttributes = new { @class = "form-control-multi", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.Plan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateSignedByPhys, htmlAttributes: new { @class = "control-Label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateSignedByPhys, new { htmlAttributes = new { @class = "form-control", onchange = "HandleFieldChange()" } })
                @Html.ValidationMessageFor(model => model.DateSignedByPhys, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" onclick="HandleSaveEvent()" />
            </div>
        </div>
    </div>
}

@Html.ActionLink("Go back to visit list", "PatientIndex", "Visits", new { id = paid }, null)

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
<script>
    function HandleFieldChange() {
        $("#UnsavedChanges").val("1");
    }

    function HandleSaveEvent() {
        $("#UnsavedChanges").val("0");
    }

    $("input:checkbox").click(function () {
        HandleFieldChange();
    })

    window.onbeforeunload = function () {
        if ($("#UnsavedChanges").val() == "1") {
            var _message = "You currently have unsaved changes!!!\n\nAre you sure you want to exit without saving.\n\nChoose ‘Leave this page’ to exit without saving changes.\nChoose ‘Stay on this page’ to return to the billing profile.";
            return _message;
        }
    }
            $(document).ready(function () {
                if ($('#initial').is(':checked')) {
                    $('#office').show();
                    $('#epi').show();
                    $('#ref').show();
                    $('#problem').hide();
                    $('#follow').hide();
                } else {
                    $('#follow').show();
                    $('#problem').show();
                    $('#office').hide();
                    $('#epi').hide();
                    $('#ref').hide();
                }
            })           
</script>
<script type="text/javascript">
            function mycheck() {
                var chkBox = document.getElementById('initial');
                if (chkBox.checked) {
                    $('#follow').hide();
                    $('#problem').hide();
                    $('#office').show();
                    $('#epi').show();
                    $('#ref').show();
                }
                else {
                    $('#office').hide();
                    $('#epi').hide();
                    $('#ref').hide();
                    $('#follow').show();
                    $('#problem').show();
                }
            }
            
</script>    
}


